---
- name: Create dir for loki config
  ansible.builtin.file:
    path: /etc/loki
    state: directory
    owner: root
    mode: '0750'

- name: Create dir for promtail config
  ansible.builtin.file:
    path: /etc/promtail
    state: directory
    owner: root
    mode: '0750'

- name: Copy loki config
  ansible.builtin.template:
    src: loki_config.yml
    dest: /etc/loki/local-config.yml
    owner: root
    group: root
    mode: '0664'

- name: Copy promtail config
  ansible.builtin.template:
    src: promtail_config.yml
    dest: /etc/promtail/config.yml
    owner: root
    group: root
    mode: '0664'

- name: copy docker-compose file
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: /home/docker-compose.yml
    owner: root
    group: root
    mode: '664'
  
- name: start loki and promtail
  vars:
    ansible_python_interpreter: /usr/bin/python3
  community.docker.docker_compose:
    project_src: /home
    files: docker-compose.yml
  register: output

- name: print docker-compose up output
  ansible.builtin.debug:
    var: output

- name: Print the status of the loki container
  debug:
    msg: "The loki container status is {{ output.services['loki']['home_loki_1']['state']['status'] }}"
  failed_when: "output.services['loki']['home_loki_1']['state']['status'] != 'running'"

- name: Print the status of the promtail container
  debug:
    msg: "The promtail container status is {{ output.services['promtail']['home_promtail_1']['state']['status'] }}"
  failed_when: "output.services['promtail']['home_promtail_1']['state']['status'] != 'running'"
